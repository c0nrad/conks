// Generated by CoffeeScript 1.6.3
(function() {
  $(document).ready(function() {
    var app;
    app = window || {};
    if (app.constants == null) {
      app.constants = {};
    }
    app.constants = _.extend(app.constants, {
      bulletSpeed: app.constants.playerDeltaX * 2 - 10,
      bulletSizeX: app.constants.playerSizeX / 6,
      bulletSizeY: app.constants.playerSizeY / 6,
      bulletFillStyle: "#00FF00"
    });
    app.BulletCounter = 0;
    app.BulletModel = Backbone.Model.extend({
      defaults: function() {
        return {
          color: ["#FF0000", "#FF7F00", "#FFFF00", "#00FF00", "#0000FF", "#FFB7D5", "#8B00FF"][app.BulletCounter = (app.BulletCounter + 1) % 7],
          x: 0,
          y: 0
        };
      },
      initialize: function() {},
      move: function() {
        switch (this.get('direction')) {
          case "LEFT":
            this.set('x', this.get('x') - app.constants.bulletSpeed);
            break;
          case "RIGHT":
            this.set('x', this.get('x') + app.constants.bulletSpeed);
            break;
          case "UP":
            this.set('y', this.get('y') - app.constants.bulletSpeed);
        }
        return this.validate();
      },
      validate: function() {
        var floorHeight;
        if (this.get('x') > app.constants.canvasX || this.get('x') < 0 || this.get('y') < 0) {
          this.set('active', false);
        }
        floorHeight = _.max(_.map(this.blockX(), function(corner) {
          return app.rounds.height(corner) * app.constants.playerSizeX;
        }));
        if (this.get('y') > app.constants.canvasY - app.constants.bulletSizeY - floorHeight) {
          return this.set('active', false);
        }
      },
      blockX: function() {
        return [Math.floor((this.get('x') + 1) / app.constants.playerSizeX), Math.floor((this.get('x') + app.constants.bulletSizeY - 1) / app.constants.playerSizeX)];
      },
      radius: function() {
        return app.constants.bulletSizeY / 2;
      }
    });
    app.BulletView = Backbone.View.extend({
      el: "#gameCanvas",
      initialize: function() {
        _.bindAll(this, "render");
        return this.model.view = this;
      },
      render: function(ctx) {
        var canvas;
        canvas = ($(this.el)[0]);
        ctx = canvas.getContext("2d");
        ctx.fillStyle = this.model.get('color');
        return ctx.fillRect(this.model.get('x'), this.model.get('y'), app.constants.bulletSizeX, app.constants.bulletSizeY);
      }
    });
    return app.Bullets = Backbone.Collection.extend({
      model: app.BulletView,
      renderAll: function() {
        return this.forEach(function(bullet) {
          if (bullet.get('active')) {
            return bullet.view.render();
          }
        });
      },
      moveAll: function() {
        return this.forEach(function(bullet) {
          if (bullet.get('active')) {
            return bullet.move();
          }
        });
      }
    });
  });

}).call(this);
